setwd("/Users/yelab/Documents/R_files/")
source('ukb34137_loaddata.r') #generates bd (UKB dataset)
library(plyr)
library(dplyr)
library(tidyverse)
bd_new <- read.table("ukb37330.tab", 
                     header=TRUE, sep="\t")
bd_newer<- read.table("ukb38039.tab",
                      header=TRUE, sep="\t")

# Find 24HR people only/make new table called bd1 --------------------
daycols<-c("f.20080.0.0", "f.20080.1.0", "f.20080.2.0",
           "f.20080.3.0", "f.20080.4.0")
bd1<-bd
#Change all the values to characters for easier manipulation
bd1<-apply(bd1[,daycols], 2, as.character)
#Change NA's to zeros and days to 1's
bd1[(is.na(bd1[,daycols]))]<-0
bd1[bd1[,daycols]!="0"] <-1
#Change these back to numeric
bd1<-apply(bd1[,daycols], 2, as.integer)
#Now make a new column, everyone with rowSums zero write FALSE
#and those with >0 write TRUE
sum<-apply(bd1[,daycols], 1, sum)
bd1<-as.data.frame(bd1)
bd1<-bd1 %>% mutate (took_24HR = sum)
bd1<-bd1%>% mutate(took_24HR = replace(took_24HR, took_24HR>0, "Yes")) %>%
    mutate(took_24HR = replace(took_24HR, took_24HR==0, "No"))
sum(bd1$took_24HR=="Yes") #[1] 211018 **SUCCESS**
bd1$FID<-bd$f.eid



# Generate pheno file -------------------------------------------

bd_pheno<- bd %>% select(f.eid, f.31.0.0, f.22001.0.0, f.21000.0.0, 
                         f.40007.0.0, f.2050.0.0,
                       f.30690.0.0, f.30780.0.0, f.30870.0.0, f.22020.0.0,
                       f.22027.0.0, f.22019.0.0, 
                       f.22021.0.0, f.22006.0.0)

colnames(bd_pheno)<-c("FID", "Sex", "Genetic_Sex", "Race", 
                      "Death_Age", "Depress_2wk",
                    "Tot_Chol", "LDL", "TAGs", "Used_in_PCA",
                    "Outliers_for_het_or_missing", "SexchrAneuploidy",
                    "Genetic_kinship", "Genetic_ethnic_grouping")
bd_pheno<-as_tibble(bd_pheno)

#Filter by people who took 24HR only
# bd_pheno$took_24HR<- bd1$took_24HR
# bd_pheno<-bd_pheno%>%filter(took_24HR == "Yes")

##Fix up columns from left to right

#Sex
bd_pheno$Sex<-mapvalues(as.character(bd_pheno$Sex), 
                        c("Male", "Female"), c(1,2))
bd_pheno$Genetic_Sex<-mapvalues(as.character(bd_pheno$Genetic_Sex), 
                        c("Male", "Female"), c(1,2))

#Death_Age
bd_pheno$Death_Age<-replace_na(bd_pheno$Death_Age, "-9")


## Depression diagnosis--------------------------------

# Change to binary 0- no depression phenotype; 1 - yes phenotype
bd_pheno$Depress_2wk<-replace_na(as.character(bd_pheno$Depress_2wk), "-9")

depression_original<-c("Prefer not to answer", "Do not know",
                       "Not at all", 
                       "Several days", "More than half the days",
                       "Nearly every day")
depression_recode<-c(-9,-9,
                     0,
                     1,1,1)

bd_pheno$Depress_2wk<-mapvalues(bd_pheno$Depress_2wk, 
          depression_original, depression_recode)


##Cancer
#coding_cancer<-read_tsv("cancercoding.tsv")
cancercols<-c("f.20001.0.0", "f.20001.0.1", "f.20001.0.2", 
              "f.20001.0.3", "f.20001.0.4")
#head(bd[,cancercols],100)


cancercodes<-c(1002, 1044, 1020, 1022, 1024, 1032, 1062)
names(cancercodes)<-c("breast_cancer", "prostate_cancer", "LI_colorectal_cancer", 
  "colon_sigmoid_cancer", "liver_cancer", "brain_cancer", "squamous_cell")

df<-data.frame(matrix(ncol=length(cancercodes), nrow= nrow(bd_new)))
colnames(df)<-names(cancercodes)

for (i in seq_along(cancercodes)){
  vec<-rowSums(sapply(bd_new[,cancercols],
                      function(x) grepl(cancercodes[i], x, ignore.case = TRUE)
  ))>0
  df[,i]<-vec
}

df$f.eid<-bd_new$f.eid
bd_pheno<-bd_pheno%>%inner_join(df, c("FID" = "f.eid"))

##Noncancer
#coding_noncancer<-read_tsv("noncancercoding.tsv")

#Cardiac stuff
cardiaccodes<-c(1065, 1066, 1067, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 
                1078,1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1093, 1094)
names(cardiaccodes)<-sprintf("cardiac.%s", 1:21)
cardiaccodes

cardiaccols<-sprintf("f.20002.0.%s", 0:33)

df2<-data.frame(matrix(ncol=length(cardiaccodes), nrow= nrow(bd_new)))
colnames(df2)<-names(cardiaccodes)

for (i in seq_along(cardiaccodes)){
  vec<-rowSums(sapply(bd_new[,cardiaccols],
                      function(x) grepl(cardiaccodes[i], x, ignore.case = TRUE)
  ))>0
  df2[,i]<-vec
}
sum(df2$cardiac.1)

df2$f.eid<-bd_new$f.eid
bd_pheno<-bd_pheno%>%inner_join(df2, c("FID" = "f.eid"))

#Function: manyColsToDummy=======================================

#manyColsToDummy(cardiaccodes, bd_new[,cardiaccols], "test_output4")

manyColsToDummy<-function(search_terms, search_columns,
                          output_table){
  #initialize output table
  temp_table<-data.frame(matrix(ncol=length(search_terms),
                                nrow= nrow(search_columns)))
  colnames(temp_table)<-search_terms
  
  #make table
  for (i in 1:length(search_terms)){
    vec<-rowSums(sapply(search_columns,
                        function(x) grepl(search_terms[i], x, ignore.case = TRUE)
    ))>0
    temp_table[,i]<-vec
  }
  temp_table<-sapply(temp_table, as.integer, as.logical)
  temp_table<-as.data.frame(temp_table)
  assign(x = output_table, value = temp_table, envir = globalenv())
}




#Noncancer disease codes======================================
noncancercodes<-c(1461, 1462, 1464, 1223)
noncancercols<-sprintf("f.20002.0.%s", 0:33)
names(noncancercodes)<-c("inflam_bowel", "crohns", "rhematoid_arth", "T2D")

df<-data.frame(matrix(ncol=length(noncancercodes), nrow= nrow(bd_new)))
colnames(df)<-names(noncancercodes)

for (i in seq_along(noncancercodes)){
  vec<-rowSums(sapply(bd_new[,noncancercols],
                      function(x) grepl(noncancercodes[i], x, ignore.case = TRUE)
  ))>0
  df[,i]<-vec
}

df$f.eid<-bd_new$f.eid
bd_pheno<-bd_pheno%>%inner_join(df, c("FID" = "f.eid"))


#Map values 0 and 1 to TRUE/FALSE
bd_pheno[,15:ncol(bd_pheno)]<-
 sapply(bd_pheno[,15:ncol(bd_pheno)], mapvalues, c(TRUE, FALSE), c(1, 0))

#QC filtering
bd_pheno<-bd_pheno%>%filter(Genetic_ethnic_grouping == "Caucasian")
bd_pheno<-bd_pheno%>%filter(Used_in_PCA == "Yes")
bd_pheno<-bd_pheno%>%
  filter(is.na(Outliers_for_het_or_missing) | Outliers_for_het_or_missing !="Yes") 
bd_pheno<-bd_pheno%>%
  filter(is.na(SexchrAneuploidy) | SexchrAneuploidy != "Yes")
bd_pheno<- bd_pheno%>%
  filter(is.na(Genetic_kinship) | 
   Genetic_kinship != "Ten or more third-degree relatives identified")
#If Sex does not equal genetic sex, exclude participant
bd_pheno<-bd_pheno[bd_pheno$Sex == bd_pheno$Genetic_Sex,] #remove 378 individuals

#From maximum_set_of_unrelated_individuals.MF.pl output
max_unrelated<-read.table("ukb48818_rel_s488282_output.dat")
max_unrelated<-as.integer(unlist(max_unrelated))
bd_pheno<-bd_pheno%>%filter(!FID %in% max_unrelated)
bd_pheno
#310,998 ppts


# Finalize/write  pheno file -----------------------------------------

bd_pheno$IID<-bd_pheno$FID
bd_pheno<-bd_pheno%>%select(-Race, -Genetic_Sex, -Used_in_PCA, 
                -Outliers_for_het_or_missing, -SexchrAneuploidy,
                -Genetic_kinship, -Genetic_ethnic_grouping)

bd_pheno<-bd_pheno%>%select(FID, IID, Sex, everything())

#To write, uncomment this:
write.table(bd_pheno, file= "pheno_11142019.txt", row.names = FALSE, 
            quote = FALSE)

# # Make phenotype files filtered by interaction terms ------------
# 
# #Load most recent pheno file
# pheno_raw<-read.table("pheno_11142019.txt", header = TRUE,
#                       stringsAsFactors = FALSE)
# pheno_raw<-as_tibble(pheno_raw)
# pheno_raw
# 
# covar_raw<-read.table("covar_11042019.txt", header=TRUE, 
#                       stringsAsFactors = FALSE)
# covar_raw<-as_tibble(covar_raw)
# covar_fish<-covar_raw%>%select(FID, IID, weekly_oily_fish, fish_oil_initial)
# covar_fish
# pheno_fish<-left_join(pheno_raw, covar_fish, by=c("FID", "IID"))
# pheno_FO<-pheno_fish%>%filter(fish_oil_initial == 1)
# pheno_noFO<-pheno_fish%>%filter(fish_oil_initial == 0)
# 
# pheno_FO
# pheno_noFO
# write.table(pheno_FO, file= "pheno_FO_12112019.txt", row.names = FALSE, 
#             quote = FALSE)
# write.table(pheno_noFO, file= "pheno_noFO_12112019.txt", row.names = FALSE, 
#             quote = FALSE)

#================================================================ #
#================================================================ #
#================================================================ #

# Generate covar file -------------------------------------------

bd_covar<- bd %>% select(f.eid, f.31.0.0, f.21003.0.0, f.21000.0.0,  
                          f.189.0.0, f.1329.0.0)

colnames(bd_covar)<-c("FID", "Sex", "Age", "Race", 
                      "Townsend", "weekly_oily_fish")
bd_covar<-as_tibble(bd_covar)

BMI<-bd_new%>%select(f.eid, f.21001.0.0)
bd_covar<-bd_covar%>%inner_join(BMI, by = c("FID" = "f.eid"))
bd_covar<-rename(bd_covar, "BMI" = "f.21001.0.0")

pregnant<-bd_new%>%select(f.eid, f.3140.0.0)
bd_covar<-bd_covar%>%inner_join(pregnant, by = c("FID" = "f.eid"))
bd_covar<-rename(bd_covar, "Pregnant" = "f.3140.0.0")
bd_covar$Pregnant<-mapvalues(bd_covar$Pregnant, c(NA, 0, 1, 2), c(0, 0, 1, 0))

##Fix up columns from left to right

#Sex
bd_covar$Sex<-mapvalues(as.character(bd_covar$Sex), 
                      c("Male", "Female"), c(1,2))


#weekly_oily fish
bd_covar$weekly_oily_fish<-mapvalues(bd_covar$weekly_oily_fish, c("Never", 
        "Less than once a week", "Once a week", "2-4 times a week",
        "5-6 times a week", "Once or more daily", "Do not know",
        "Prefer not to answer"), c(0,1,2,3,4,5,-9,-9))

#Add fish oil initial assessment column=============================
initialfishcols<-c("f.6179.0.0","f.6179.0.1","f.6179.0.2",
                   "f.6179.0.3", "f.6179.0.4")

bd_covar$fish_oil_initial<-rowSums(sapply(bd_new[,initialfishcols],
               function(x) grepl(1, x)))>0
sum(bd_covar$fish_oil_initial, na.rm = TRUE)
#[1] 155826 : correct



#Servings 





# Add fish oil 24HR column---do this BEFORE filtering data set--------
# Or else rewrite to use a join.
eg<-expand.grid(seq(0,4), seq(0,20))
fish_oil_cols<-sprintf("f.20084.%s.%s", eg[,1], eg[,2])

bd_temp<-bd%>%
    mutate(Fish_Oil_Supp = rowSums(
        sapply(bd[,fish_oil_cols],
               function(x) grepl("Fish oil", x, ignore.case = TRUE)
        ))>0
    ) %>% select(f.eid, Fish_Oil_Supp)

sum(bd_temp$Fish_Oil_Supp)


bd_covar$fish_oil_24HR<-bd_temp$Fish_Oil_Supp
bd_covar$fish_oil_24HR<-mapvalues(bd_covar$Fish_Oil_Supp, 
                                  c(TRUE, FALSE), c(1, 0))


#24HR Oily Fish===============================
#Field 103140 [fish consumer] determines who was asked in 103160

# fish_cols<-c("f.103140.0.0", "f.103140.1.0", "f.103140.2.0", 
#                  "f.103140.3.0", "f.103140.4.0") 
# consumeroffish<-bd[,fish_cols]
# consumeroffish<-consumeroffish%>% 
#     mutate(count_na = apply(., 1, count_na))
# 
# nrow(consumeroffish[consumeroffish$count_na ==5,])
# #[1] 291509

#"How many servings of oily fish (e.g. salmon, tinned salmon, herring, 
#mackerel, sardines, fresh tuna steak) did you have?"
levels(bd$f.103160.0.0)
# [1] "1"    "2"    "3"    "4+"   "half"

oily_cols<-c("f.103160.0.0", "f.103160.1.0",
            "f.103160.2.0", "f.103160.3.0", "f.103160.4.0")

oily_fish<-bd[,oily_cols]

#replace "half" with 0.5
oily_fish$f.103160.0.0<-mapvalues(oily_fish$f.103160.0.0, "half", "0.5")
oily_fish$f.103160.1.0<-mapvalues(oily_fish$f.103160.1.0, "half", "0.5")
oily_fish$f.103160.2.0<-mapvalues(oily_fish$f.103160.2.0, "half", "0.5")
oily_fish$f.103160.3.0<-mapvalues(oily_fish$f.103160.3.0, "half", "0.5")
oily_fish$f.103160.4.0<-mapvalues(oily_fish$f.103160.4.0, "half", "0.5")

#Add columns for avg fish servings and number of NA responses
count_na <- function(x) sum(is.na(x))
oily_fish<-oily_fish%>% mutate(count_na = apply(., 1, count_na), 
                               answers = 5-count_na)

#Convert factors to numeric
oily_fish$f.103160.0.0<-as.numeric(levels(oily_fish$f.103160.0.0))[oily_fish$f.103160.0.0]
oily_fish$f.103160.1.0<-as.numeric(levels(oily_fish$f.103160.1.0))[oily_fish$f.103160.1.0]
oily_fish$f.103160.2.0<-as.numeric(levels(oily_fish$f.103160.2.0))[oily_fish$f.103160.2.0]
oily_fish$f.103160.3.0<-as.numeric(levels(oily_fish$f.103160.3.0))[oily_fish$f.103160.3.0]
oily_fish$f.103160.4.0<-as.numeric(levels(oily_fish$f.103160.4.0))[oily_fish$f.103160.4.0]

sum<-oily_fish%>% select(f.103160.0.0, f.103160.1.0, f.103160.2.0, 
                    f.103160.3.0, f.103160.4.0) %>%
    mutate(sum = rowSums(., na.rm=TRUE)) %>%select(sum)

oily_fish$sum<-as.double(unlist(sum))

#Number of oily fish servings is total servings divided by number of
#times survey was completed
avg_oily_fish_servings<-oily_fish$sum/oily_fish$answers

avg_oily_fish_servings<-replace_na(avg_oily_fish_servings, 0)

#add oily fish to covar data frame
bd_covar$avg_oily_fish_servings<-
    avg_oily_fish_servings #only relevant for ppl who took 24HR!

#Special diet followed: column f.20086
#**ONLY AVAILABLE FOR 24HR participants



#Replace T/F with numbers (0,1)=======================
bd_covar$fish_oil_initial<-mapvalues(bd_covar$fish_oil_initial, 
                                  c(TRUE, FALSE), c(1, 0))





# Add PCs -------------------------------------------------------

cols_PCA<-c("f.eid", sprintf("f.22009.0.%s", 1:40))
PCA<-bd[,cols_PCA]
colnames(PCA)<-c("FID", sprintf("PCA%s", 1:40))

bd_covar<-bd_covar %>% inner_join(PCA, by= "FID")

#plot(sapply(bd_covar[,8:17], function(x){sum(abs(x), na.rm=TRUE)}))


#Filter by people who took 24HR only----------------------------------
# bd_covar$took_24HR<- bd1$took_24HR
# bd_covar<-bd_covar%>%filter(took_24HR == "Yes")

#Race--British only. What about genetic race? Ignoring for now
bd_covar<-bd_covar%>%filter(Race == "British")



##Finalize/write  covar file ----------------------------------------

bd_covar$IID<-bd_covar$FID
bd_covar<-bd_covar%>% select(FID, IID, everything())

#To write, uncomment this:
write.table(bd_covar, file= "covar_10012019.txt", 
         row.names = FALSE, quote = FALSE)



# Add statins ---------------------------------------------------

covar<-read.table("covar_10012019.txt", header = TRUE, 
                  stringsAsFactors = FALSE)

statincols<-c("f.eid", sprintf("f.20003.0.%s", 0:47))
statincodes<-c(1140861958, 1140888594, 1140888648, 1140910632, 
               1140910654, 1141146234, 1141192410)
names(statincodes)<-c("simvastatin", "fluvastatin", "prevastatin", 
                      "eptastatin", "velastatin", "atorvastatin", 
                      "rosuvastatin")

manyColsToDummy(statincodes, bd_newer[,statincols], "statinoutput")
colnames(statinoutput)<-names(statincodes)
statinoutput$FID<-bd_newer$f.eid
covar<-left_join(covar, statinoutput, by= "FID")

write.table(covar, file= "covar_10292019.txt", 
            row.names = FALSE, quote = FALSE)


# Combine statin columns ----------------------------------------

covar<-read.table("covar_10292019.txt", header = TRUE, 
                  stringsAsFactors = FALSE)
covar$statins<-apply(covar[,51:57], 1, sum, na.rm=TRUE)
covar$statins[covar$statins==2]<-1
covar<-covar[,-(51:58)]
covar

write.table(covar, file= "covar_11042019.txt", 
            row.names = FALSE, quote = FALSE)


# Turn the ordinal var avg oily fish into dummy variables -------

covar_raw<-read.table("covar_11042019.txt", header=TRUE,
                      stringsAsFactors = FALSE)
covar<-as_tibble(covar_raw)

table(covar$weekly_oily_fish)
covar

covar$WOF1<-0
covar$WOF2<-0
covar$WOF3<-0
covar$WOF4<-0
covar$WOF5<-0

covar$WOF1[covar$weekly_oily_fish==1]<-1
covar$WOF2[covar$weekly_oily_fish==2]<-1
covar$WOF3[covar$weekly_oily_fish==3]<-1
covar$WOF4[covar$weekly_oily_fish==4]<-1
covar$WOF5[covar$weekly_oily_fish==5]<-1
#check: sapply(covar[,52:56], sum)

covar
covarb<-sapply(covar, mapvalues, -9, NA)
head(covarb)
head(as.data.frame(covarb))

write.table(covarb, file= "covarb_12182019.txt", 
            row.names = FALSE, quote = FALSE)

quantile(covar$BMI, na.rm = TRUE)
?quantile

covar$BMIq<-0
covar$BMIq[covar$BMI>=12.1212 & covar$BMI<24.1447]<-0
covar$BMIq[covar$BMI>=24.1447 & covar$BMI<26.7330]<-1
covar$BMIq[covar$BMI>=26.7330 & covar$BMI<29.8845]<-2
covar$BMIq[covar$BMI>=29.8845 & covar$BMI<100]<-3
covar$BMIq[is.na(covar$BMI)]<-"NA"


covar$AgeT<-(covar$Age-38)

write.table(covar, file= "covart_12182019.txt", 
            row.names = FALSE, quote = FALSE)



# 12-19-2019 ----------------------------------------------------

covar_raw<-read.table("covart_12182019.txt", header=TRUE,
                      stringsAsFactors = FALSE)
covar<-as_tibble(covar_raw)

pheno_raw<-read.table("pheno_11142019.txt", header=TRUE,
                      stringsAsFactors = FALSE)

pheno<-as_tibble(pheno_raw)
head(bd1)
took24<-bd1%>%select(FID, took_24HR)
pheno<-left_join(pheno,took24, by='FID')
pheno24<-pheno%>%filter(took_24HR=="Yes")
head(as.data.frame(pheno24), 50)

write.table(pheno24, file= "pheno24_12192019.txt", 
            row.names = FALSE, quote = FALSE)


# this section was fixed in unix 1-4-2020 to change T/F to 1/0 because apparently that didn't work here ---------------------------------------

covar_raw<-read.table("covart_12182019.txt", header=TRUE,
                      stringsAsFactors = FALSE)
covar<-as_tibble(covar_raw)
covar<-left_join(covar,took24, by='FID')
covar24<-covar%>%filter(took_24HR=="Yes")

covar24f<-left_join(covar24, bd_temp, by=c('FID'='f.eid'))
sum(covar24f$Fish_Oil_Supp) #check if this is right--later

compare<-covar24f%>%select(FID, fish_oil_initial, Fish_Oil_Supp)
nrow(compare[compare$fish_oil_initial==1 & compare$Fish_Oil_Supp==TRUE,])
#[1] 16948
nrow(compare[compare$fish_oil_initial==0 & compare$Fish_Oil_Supp==FALSE,])
#[1] 91302
nrow(compare[compare$fish_oil_initial==0 & compare$Fish_Oil_Supp==TRUE,])
#[1] 38219
nrow(compare[compare$fish_oil_initial==1 & compare$Fish_Oil_Supp==FALSE,])
#[1] 41202


covar24f$fish<-(-9)
covar24f$fish[covar24f$fish_oil_initial==1 & covar24f$Fish_Oil_Supp==TRUE]<-1
covar24f$fish[covar24f$fish_oil_initial==0 & covar24f$Fish_Oil_Supp==FALSE]<-0

covar24f<-covar24f%>%filter(fish != (-9))

write.table(covar24f, file= "covar24_12192019.txt", 
            row.names = FALSE, quote = FALSE)

# covar24f$totalfish<-(covar24f$weekly_oily_fish)
# covar24f$totalfish<-covar24f$totalfish/7
# covar24f$totalfish<-rowSums(covar24f[,c("totalfish", "fish")])

write.table(covar24f, file= "covar24b_12192019.txt", 
            row.names = FALSE, quote = FALSE)


# Not 24h people, yes combined fish score -----------------------

covar_raw<-read.table("covart_12182019.txt", header=TRUE,
                      stringsAsFactors = FALSE)
covar<-as_tibble(covar_raw)
# covar$totalfish<-(covar$weekly_oily_fish)
# covar$totalfish[covar$totalfish==-9]<-NA
# covar$totalfish<-covar$totalfish/7
# covar$totalfish<-rowSums(covar[,c("totalfish", "fish_oil_initial")])
# range(covar$totalfish, na.rm = TRUE)

write.table(covar, file= "covar_12202019.txt", 
            row.names = FALSE, quote = FALSE)


# Add more depression categories to phenotype24 file 01-05-2020-------

pheno_raw<-read.table("pheno24_12192019.txt", header=TRUE,
                      stringsAsFactors = FALSE)

pheno<-as_tibble(pheno_raw)
ukb <- read.table("ukb34137.tab", header=TRUE, sep="\t")

D<-data.frame(ukb$f.eid, ukb$f.20126)
head(D)
D$ukb.f.20126<-mapvalues(D$ukb.f.20126, c(1,2,3,4,5), c(1,1,1,1,1))
colnames(D)<-c("FID", "majdep_or_bipol")
D$majdep_or_bipol<-replace_na(D$majdep_or_bipol, "-9")

pheno<-left_join(pheno, D, by="FID")
table(pheno$majdep_or_bipol) #not using because there are only 
#~50,000 indiv. with values which will be even less after PLINK QC


# Add covariates ------------------------------------------------

ukb <- read.table("ukb34137.tab", header=TRUE, sep="\t")

covar_raw<-read.table("covar24_01042020.txt", header=TRUE,
                      stringsAsFactors = FALSE)
covar<-as_tibble(covar_raw)
covar

depmed<-c("f.eid", "f.20546.0.1", "f.20546.0.2", "f.20546.0.3")

d<-ukb[,depmed]

#d[(is.na(d[,depmed]))]<-(0)
d<-as_tibble(d)
d
d<-as.data.frame(sapply(d, mapvalues, c(1,3,4,-818), c(0,1,0,NA)))
d

d$sum<-d%>%select(f.20546.0.1, f.20546.0.2, f.20546.0.3)%>% mutate(sum = rowSums(., na.rm=TRUE))%>%select(sum)
sum(d$sum)
#[1] 37481
d<-d%>%select(f.eid, sum)
colnames(d)<-c("FID","Depress_meds")
head(d)
sum(d$Depress_meds)
#join
covar<-left_join(covar, d, by="FID")
table(covar$Depress_meds)

write.table(covar, file= "covar24_01042020b.txt", 
            row.names = FALSE, quote = FALSE)


# Check numbers 01-05-2020--------------------------------------------

covar_raw<-read.table("covar24_01042020b.txt", header=TRUE,
                      stringsAsFactors = FALSE)

covar<-as_tibble(covar_raw)

pheno_raw<-read.table("pheno24_12192019.txt", header=TRUE,
                      stringsAsFactors = FALSE)

pheno<-as_tibble(pheno_raw)

pheno
covar
join<-left_join(covar, pheno, by="FID")


